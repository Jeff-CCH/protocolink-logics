/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { SpenderPermit2ERC20, SpenderPermit2ERC20Interface } from '../SpenderPermit2ERC20';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'router_',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'permit2_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidRouter',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTransferFrom',
    type: 'error',
  },
  {
    inputs: [],
    name: 'InvalidTransferTo',
    type: 'error',
  },
  {
    inputs: [],
    name: 'permit2',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
            ],
            internalType: 'struct ISignatureTransfer.TokenPermissions',
            name: 'permitted',
            type: 'tuple',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureTransfer.PermitTransferFrom',
        name: 'permit',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'requestedAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureTransfer.SignatureTransferDetails',
        name: 'transferDetails',
        type: 'tuple',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'permitPullToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: 'address',
                name: 'token',
                type: 'address',
              },
              {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
              },
            ],
            internalType: 'struct ISignatureTransfer.TokenPermissions[]',
            name: 'permitted',
            type: 'tuple[]',
          },
          {
            internalType: 'uint256',
            name: 'nonce',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureTransfer.PermitBatchTransferFrom',
        name: 'permit',
        type: 'tuple',
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint256',
            name: 'requestedAmount',
            type: 'uint256',
          },
        ],
        internalType: 'struct ISignatureTransfer.SignatureTransferDetails[]',
        name: 'transferDetails',
        type: 'tuple[]',
      },
      {
        internalType: 'bytes',
        name: 'signature',
        type: 'bytes',
      },
    ],
    name: 'permitPullTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint160',
        name: 'amount',
        type: 'uint160',
      },
    ],
    name: 'pullToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'from',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'to',
            type: 'address',
          },
          {
            internalType: 'uint160',
            name: 'amount',
            type: 'uint160',
          },
          {
            internalType: 'address',
            name: 'token',
            type: 'address',
          },
        ],
        internalType: 'struct IAllowanceTransfer.AllowanceTransferDetails[]',
        name: 'transferDetails',
        type: 'tuple[]',
      },
    ],
    name: 'pullTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'router',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60c060405234801561001057600080fd5b506040516110b83803806110b883398101604081905261002f91610062565b6001600160a01b039182166080521660a052610095565b80516001600160a01b038116811461005d57600080fd5b919050565b6000806040838503121561007557600080fd5b61007e83610046565b915061008c60208401610046565b90509250929050565b60805160a051610f9061012860003960008181606c0152818161024601528181610420015281816105de015261082301526000818160fd0152818161012a0152818161016c0152818161020b015281816102b4015281816102f601528181610389015281816104a5015281816104e7015281816105730152818161065f015281816106a1015261078a0152610f906000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806312261ee714610067578063c81cd1f4146100aa578063da57c490146100bf578063ee27cd7e146100d2578063f2c7f02e146100e5578063f887ea40146100f8575b600080fd5b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6100bd6100b83660046108aa565b61011f565b005b6100bd6100cd366004610a3a565b6102a9565b6100bd6100e0366004610b82565b61049a565b6100bd6100f3366004610c39565b610654565b61008e7f000000000000000000000000000000000000000000000000000000000000000081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101685760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ec9190610cae565b604051631b63c28b60e11b81526001600160a01b0380831660048301527f000000000000000000000000000000000000000000000000000000000000000081166024830152848116604483015285811660648301529192507f0000000000000000000000000000000000000000000000000000000000000000909116906336c7851690608401600060405180830381600087803b15801561028c57600080fd5b505af11580156102a0573d6000803e3d6000fd5b50505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102f25760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610352573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103769190610cae565b86515190915060005b81811015610408577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168787838181106103c3576103c3610cd2565b6103d99260206040909202019081019150610ce8565b6001600160a01b03161461040057604051631653a08960e21b815260040160405180910390fd5b60010161037f565b5060405163edd9444b60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063edd9444b9061045f908a908a908a9088908b908b90600401610d8d565b600060405180830381600087803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b5050505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e35760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610543573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105679190610cae565b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166105a06020860186610ce8565b6001600160a01b0316146105c757604051631653a08960e21b815260040160405180910390fd5b60405163187945bd60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906330f28b7a9061061b9088908890869089908990600401610e52565b600060405180830381600087803b15801561063557600080fd5b505af1158015610649573d6000803e3d6000fd5b505050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461069d5760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107219190610cae565b90508160005b8181101561080b57826001600160a01b031685858381811061074b5761074b610cd2565b6107619260206080909202019081019150610ce8565b6001600160a01b031614610788576040516322fe1f0760e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168585838181106107c4576107c4610cd2565b90506080020160200160208101906107dc9190610ce8565b6001600160a01b03161461080357604051631653a08960e21b815260040160405180910390fd5b600101610727565b50604051630d58b1db60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690630d58b1db9061085a9087908790600401610ec5565b600060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b5050505050505050565b6001600160a01b03811681146108a757600080fd5b50565b600080604083850312156108bd57600080fd5b82356108c881610892565b915060208301356108d881610892565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561091c5761091c6108e3565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561094b5761094b6108e3565b604052919050565b60006040828403121561096557600080fd5b6040516040810181811067ffffffffffffffff82111715610988576109886108e3565b604052905080823561099981610892565b8152602092830135920191909152919050565b60008083601f8401126109be57600080fd5b50813567ffffffffffffffff8111156109d657600080fd5b6020830191508360208260061b85010111156109f157600080fd5b9250929050565b60008083601f840112610a0a57600080fd5b50813567ffffffffffffffff811115610a2257600080fd5b6020830191508360208285010111156109f157600080fd5b600080600080600060608688031215610a5257600080fd5b853567ffffffffffffffff80821115610a6a57600080fd5b908701906060828a031215610a7e57600080fd5b610a866108f9565b823582811115610a9557600080fd5b8301601f81018b13610aa657600080fd5b8035602084821115610aba57610aba6108e3565b610ac8818360051b01610922565b82815260069290921b8301810191818101908e841115610ae757600080fd5b938201935b83851015610b1057610afe8f86610953565b82528282019150604085019450610aec565b8552508581013581850152604095860135958401959095525090975050908701359080821115610b3f57600080fd5b610b4b89838a016109ac565b90965094506040880135915080821115610b6457600080fd5b50610b71888289016109f8565b969995985093965092949392505050565b60008060008084860360e0811215610b9957600080fd5b6080811215610ba757600080fd5b6040516060810167ffffffffffffffff8282108183111715610bcb57610bcb6108e3565b81604052610bd98a8a610953565b835260408901356020840152606089013560408401528297506040607f1985011215610c0457600080fd5b60808901965060c0890135935080841115610c1e57600080fd5b505050610c2d878288016109f8565b95989497509550505050565b60008060208385031215610c4c57600080fd5b823567ffffffffffffffff80821115610c6457600080fd5b818501915085601f830112610c7857600080fd5b813581811115610c8757600080fd5b8660208260071b8501011115610c9c57600080fd5b60209290920196919550909350505050565b600060208284031215610cc057600080fd5b8151610ccb81610892565b9392505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215610cfa57600080fd5b8135610ccb81610892565b8035610d1081610892565b6001600160a01b03168252602090810135910152565b81835260208301925060008160005b84811015610d5a57610d478683610d05565b6040958601959190910190600101610d35565b5093949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60808152600060e082018851606060808501528181518084526101008601915060209350838301925060005b81811015610df257610ddf83855180516001600160a01b03168252602090810151910152565b9284019260409290920191600101610db9565b5050828b015160a086015260408b015160c086015284810383860152610e19818a8c610d26565b92505050610e3260408401876001600160a01b03169052565b8281036060840152610e45818587610d64565b9998505050505050505050565b6000610100610e7583895180516001600160a01b03168252602090810151910152565b6020880151604084015260408801516060840152610e966080840188610d05565b6001600160a01b03861660c084015260e08301819052610eb98184018587610d64565b98975050505050505050565b6020808252818101839052600090604080840186845b87811015610f4d578135610eee81610892565b6001600160a01b0390811684528286013590610f0982610892565b908116848701528285013590610f1e82610892565b9081168486015260609083820135610f3581610892565b16908401526080928301929190910190600101610edb565b509097965050505050505056fea264697066735822122070525a78e1060180662660c4d1a88422ff44f8d8a11cb7b6e967e3474b1d6c0964736f6c63430008110033';

type SpenderPermit2ERC20ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SpenderPermit2ERC20ConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SpenderPermit2ERC20__factory extends ContractFactory {
  constructor(...args: SpenderPermit2ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router_: PromiseOrValue<string>,
    permit2_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpenderPermit2ERC20> {
    return super.deploy(router_, permit2_, overrides || {}) as Promise<SpenderPermit2ERC20>;
  }
  override getDeployTransaction(
    router_: PromiseOrValue<string>,
    permit2_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, permit2_, overrides || {});
  }
  override attach(address: string): SpenderPermit2ERC20 {
    return super.attach(address) as SpenderPermit2ERC20;
  }
  override connect(signer: Signer): SpenderPermit2ERC20__factory {
    return super.connect(signer) as SpenderPermit2ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpenderPermit2ERC20Interface {
    return new utils.Interface(_abi) as SpenderPermit2ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SpenderPermit2ERC20 {
    return new Contract(address, _abi, signerOrProvider) as SpenderPermit2ERC20;
  }
}
