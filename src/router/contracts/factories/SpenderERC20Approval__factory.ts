/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../common';
import type { SpenderERC20Approval, SpenderERC20ApprovalInterface } from '../SpenderERC20Approval';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: 'router_',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'InvalidRouter',
    type: 'error',
  },
  {
    inputs: [],
    name: 'LengthMismatch',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'pullToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]',
      },
    ],
    name: 'pullTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'router',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const;

const _bytecode =
  '0x60a060405234801561001057600080fd5b506040516108b83803806108b883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161080d6100ab6000396000818160730152818160bc0152818160fe015281816102140152818161025601526102f8015261080d6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80631d65764f146100465780635306e4b31461005b578063f887ea401461006e575b600080fd5b61005961005436600461063b565b6100b1565b005b6100596100693660046106bf565b610209565b6100957f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146100fa5760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561015a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061017e91906106eb565b9050838281146101a4576040516001621398b960e31b0319815260040160405180910390fd5b60005b81811015610200576101f88787838181106101c4576101c461070f565b90506020020160208101906101d99190610725565b8686848181106101eb576101eb61070f565b90506020020135856102e8565b6001016101a7565b50505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102525760405163466d7fef60e01b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d691906106eb565b90506102e38383836102e8565b505050565b6102e36001600160a01b038416827f0000000000000000000000000000000000000000000000000000000000000000856040516001600160a01b03808516602483015283166044820152606481018290526103829085906323b872dd60e01b9060840160408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610388565b50505050565b60006103dd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661045f9092919063ffffffff16565b8051909150156102e357808060200190518101906103fb9190610742565b6102e35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084015b60405180910390fd5b606061046e8484600085610476565b949350505050565b6060824710156104d75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610456565b600080866001600160a01b031685876040516104f39190610788565b60006040518083038185875af1925050503d8060008114610530576040519150601f19603f3d011682016040523d82523d6000602084013e610535565b606091505b509150915061054687838387610551565b979650505050505050565b606083156105c05782516000036105b9576001600160a01b0385163b6105b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610456565b508161046e565b61046e83838151156105d55781518083602001fd5b8060405162461bcd60e51b815260040161045691906107a4565b60008083601f84011261060157600080fd5b50813567ffffffffffffffff81111561061957600080fd5b6020830191508360208260051b850101111561063457600080fd5b9250929050565b6000806000806040858703121561065157600080fd5b843567ffffffffffffffff8082111561066957600080fd5b610675888389016105ef565b9096509450602087013591508082111561068e57600080fd5b5061069b878288016105ef565b95989497509550505050565b6001600160a01b03811681146106bc57600080fd5b50565b600080604083850312156106d257600080fd5b82356106dd816106a7565b946020939093013593505050565b6000602082840312156106fd57600080fd5b8151610708816106a7565b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561073757600080fd5b8135610708816106a7565b60006020828403121561075457600080fd5b8151801515811461070857600080fd5b60005b8381101561077f578181015183820152602001610767565b50506000910152565b6000825161079a818460208701610764565b9190910192915050565b60208152600082518060208401526107c3816040850160208701610764565b601f01601f1916919091016040019291505056fea26469706673582212201b92f7b71edc230af0712fe10464419261fa3558b94e7440c5bc6562927a5ac564736f6c63430008110033';

type SpenderERC20ApprovalConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: SpenderERC20ApprovalConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class SpenderERC20Approval__factory extends ContractFactory {
  constructor(...args: SpenderERC20ApprovalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpenderERC20Approval> {
    return super.deploy(router_, overrides || {}) as Promise<SpenderERC20Approval>;
  }
  override getDeployTransaction(
    router_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router_, overrides || {});
  }
  override attach(address: string): SpenderERC20Approval {
    return super.attach(address) as SpenderERC20Approval;
  }
  override connect(signer: Signer): SpenderERC20Approval__factory {
    return super.connect(signer) as SpenderERC20Approval__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpenderERC20ApprovalInterface {
    return new utils.Interface(_abi) as SpenderERC20ApprovalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SpenderERC20Approval {
    return new Contract(address, _abi, signerOrProvider) as SpenderERC20Approval;
  }
}
