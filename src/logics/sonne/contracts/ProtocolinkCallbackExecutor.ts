/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from 'ethers';
import type { FunctionFragment, Result } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';

export interface ProtocolinkCallbackExecutorInterface extends utils.Interface {
  functions: {
    'executeFromAgent(address[],bytes[],uint256[])': FunctionFragment;
    'initialized(address)': FunctionFragment;
    'isInitialized(address)': FunctionFragment;
    'isModuleType(uint256)': FunctionFragment;
    'onInstall(bytes)': FunctionFragment;
    'onUninstall(bytes)': FunctionFragment;
    'router()': FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | 'executeFromAgent'
      | 'initialized'
      | 'isInitialized'
      | 'isModuleType'
      | 'onInstall'
      | 'onUninstall'
      | 'router'
  ): FunctionFragment;

  encodeFunctionData(functionFragment: 'executeFromAgent', values: [string[], BytesLike[], BigNumberish[]]): string;
  encodeFunctionData(functionFragment: 'initialized', values: [string]): string;
  encodeFunctionData(functionFragment: 'isInitialized', values: [string]): string;
  encodeFunctionData(functionFragment: 'isModuleType', values: [BigNumberish]): string;
  encodeFunctionData(functionFragment: 'onInstall', values: [BytesLike]): string;
  encodeFunctionData(functionFragment: 'onUninstall', values: [BytesLike]): string;
  encodeFunctionData(functionFragment: 'router', values?: undefined): string;

  decodeFunctionResult(functionFragment: 'executeFromAgent', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'initialized', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'isInitialized', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'isModuleType', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'onInstall', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'onUninstall', data: BytesLike): Result;
  decodeFunctionResult(functionFragment: 'router', data: BytesLike): Result;

  events: {};
}

export interface ProtocolinkCallbackExecutor extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ProtocolinkCallbackExecutorInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    executeFromAgent(
      tos_: string[],
      datas_: BytesLike[],
      values_: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    initialized(account: string, overrides?: CallOverrides): Promise<[boolean] & { installed: boolean }>;

    isInitialized(smartAccount: string, overrides?: CallOverrides): Promise<[boolean]>;

    isModuleType(typeID: BigNumberish, overrides?: CallOverrides): Promise<[boolean]>;

    onInstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;

    onUninstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;

    router(overrides?: CallOverrides): Promise<[string]>;
  };

  executeFromAgent(
    tos_: string[],
    datas_: BytesLike[],
    values_: BigNumberish[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  initialized(account: string, overrides?: CallOverrides): Promise<boolean>;

  isInitialized(smartAccount: string, overrides?: CallOverrides): Promise<boolean>;

  isModuleType(typeID: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

  onInstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;

  onUninstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<ContractTransaction>;

  router(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    executeFromAgent(
      tos_: string[],
      datas_: BytesLike[],
      values_: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    initialized(account: string, overrides?: CallOverrides): Promise<boolean>;

    isInitialized(smartAccount: string, overrides?: CallOverrides): Promise<boolean>;

    isModuleType(typeID: BigNumberish, overrides?: CallOverrides): Promise<boolean>;

    onInstall(arg0: BytesLike, overrides?: CallOverrides): Promise<void>;

    onUninstall(arg0: BytesLike, overrides?: CallOverrides): Promise<void>;

    router(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    executeFromAgent(
      tos_: string[],
      datas_: BytesLike[],
      values_: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    initialized(account: string, overrides?: CallOverrides): Promise<BigNumber>;

    isInitialized(smartAccount: string, overrides?: CallOverrides): Promise<BigNumber>;

    isModuleType(typeID: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    onInstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<BigNumber>;

    onUninstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<BigNumber>;

    router(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    executeFromAgent(
      tos_: string[],
      datas_: BytesLike[],
      values_: BigNumberish[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    initialized(account: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isInitialized(smartAccount: string, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    isModuleType(typeID: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;

    onInstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;

    onUninstall(arg0: BytesLike, overrides?: Overrides & { from?: string }): Promise<PopulatedTransaction>;

    router(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
