"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Router__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'wrappedNative',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'pauser_',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'feeCollector_',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        inputs: [],
        name: 'AgentCreated',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidFeeCollector',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidNewPauser',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidPauser',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'referral',
                type: 'uint256',
            },
        ],
        name: 'InvalidReferral',
        type: 'error',
    },
    {
        inputs: [],
        name: 'InvalidSignature',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
        ],
        name: 'InvalidSigner',
        type: 'error',
    },
    {
        inputs: [],
        name: 'LengthMismatch',
        type: 'error',
    },
    {
        inputs: [],
        name: 'Reentrancy',
        type: 'error',
    },
    {
        inputs: [],
        name: 'RouterIsPaused',
        type: 'error',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'deadline',
                type: 'uint256',
            },
        ],
        name: 'SignatureExpired',
        type: 'error',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'bytes4',
                name: 'selector',
                type: 'bytes4',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'feeCalculator',
                type: 'address',
            },
        ],
        name: 'FeeCalculatorSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'feeCollector_',
                type: 'address',
            },
        ],
        name: 'FeeCollectorSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [],
        name: 'Paused',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'pauser',
                type: 'address',
            },
        ],
        name: 'PauserSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [],
        name: 'Resumed',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'referral',
                type: 'uint256',
            },
        ],
        name: 'SignerAdded',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
        ],
        name: 'SignerRemoved',
        type: 'event',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'referral',
                type: 'uint256',
            },
        ],
        name: 'addSigner',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'agentImplementation',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner',
                type: 'address',
            },
        ],
        name: 'agents',
        outputs: [
            {
                internalType: 'contract IAgent',
                name: 'agent',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner_',
                type: 'address',
            },
        ],
        name: 'calcAgent',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'domainSeparator',
        outputs: [
            {
                internalType: 'bytes32',
                name: '',
                type: 'bytes32',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'token',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountBps',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountOrOffset',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct IParam.Input[]',
                        name: 'inputs',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'enum IParam.WrapMode',
                        name: 'wrapMode',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address',
                        name: 'approveTo',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'callback',
                        type: 'address',
                    },
                ],
                internalType: 'struct IParam.Logic[]',
                name: 'logics',
                type: 'tuple[]',
            },
            {
                internalType: 'address[]',
                name: 'tokensReturn',
                type: 'address[]',
            },
        ],
        name: 'execute',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'to',
                                type: 'address',
                            },
                            {
                                internalType: 'bytes',
                                name: 'data',
                                type: 'bytes',
                            },
                            {
                                components: [
                                    {
                                        internalType: 'address',
                                        name: 'token',
                                        type: 'address',
                                    },
                                    {
                                        internalType: 'uint256',
                                        name: 'amountBps',
                                        type: 'uint256',
                                    },
                                    {
                                        internalType: 'uint256',
                                        name: 'amountOrOffset',
                                        type: 'uint256',
                                    },
                                ],
                                internalType: 'struct IParam.Input[]',
                                name: 'inputs',
                                type: 'tuple[]',
                            },
                            {
                                internalType: 'enum IParam.WrapMode',
                                name: 'wrapMode',
                                type: 'uint8',
                            },
                            {
                                internalType: 'address',
                                name: 'approveTo',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'callback',
                                type: 'address',
                            },
                        ],
                        internalType: 'struct IParam.Logic[]',
                        name: 'logics',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'uint256',
                        name: 'deadline',
                        type: 'uint256',
                    },
                ],
                internalType: 'struct IParam.LogicBatch',
                name: 'logicBatch',
                type: 'tuple',
            },
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
            {
                internalType: 'bytes',
                name: 'signature',
                type: 'bytes',
            },
            {
                internalType: 'address[]',
                name: 'tokensReturn',
                type: 'address[]',
            },
        ],
        name: 'executeWithSignature',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4',
                name: 'selector',
                type: 'bytes4',
            },
        ],
        name: 'feeCalculators',
        outputs: [
            {
                internalType: 'address',
                name: 'feeCalculator',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'feeCollector',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getAgent',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner_',
                type: 'address',
            },
        ],
        name: 'getAgent',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'token',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountBps',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountOrOffset',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct IParam.Input[]',
                        name: 'inputs',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'enum IParam.WrapMode',
                        name: 'wrapMode',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address',
                        name: 'approveTo',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'callback',
                        type: 'address',
                    },
                ],
                internalType: 'struct IParam.Logic[]',
                name: 'logics',
                type: 'tuple[]',
            },
            {
                internalType: 'uint256',
                name: 'msgValue',
                type: 'uint256',
            },
        ],
        name: 'getLogicsWithFee',
        outputs: [
            {
                components: [
                    {
                        internalType: 'address',
                        name: 'to',
                        type: 'address',
                    },
                    {
                        internalType: 'bytes',
                        name: 'data',
                        type: 'bytes',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'token',
                                type: 'address',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountBps',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'amountOrOffset',
                                type: 'uint256',
                            },
                        ],
                        internalType: 'struct IParam.Input[]',
                        name: 'inputs',
                        type: 'tuple[]',
                    },
                    {
                        internalType: 'enum IParam.WrapMode',
                        name: 'wrapMode',
                        type: 'uint8',
                    },
                    {
                        internalType: 'address',
                        name: 'approveTo',
                        type: 'address',
                    },
                    {
                        internalType: 'address',
                        name: 'callback',
                        type: 'address',
                    },
                ],
                internalType: 'struct IParam.Logic[]',
                name: '',
                type: 'tuple[]',
            },
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getUserAgent',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'owner_',
                type: 'address',
            },
        ],
        name: 'newAgent',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'newAgent',
        outputs: [
            {
                internalType: 'address payable',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'pause',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'paused',
        outputs: [
            {
                internalType: 'bool',
                name: '',
                type: 'bool',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'pauser',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
        ],
        name: 'removeSigner',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'resume',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'bytes4[]',
                name: 'selectors',
                type: 'bytes4[]',
            },
            {
                internalType: 'address[]',
                name: 'feeCalculators_',
                type: 'address[]',
            },
        ],
        name: 'setFeeCalculators',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'feeCollector_',
                type: 'address',
            },
        ],
        name: 'setFeeCollector',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'pauser_',
                type: 'address',
            },
        ],
        name: 'setPauser',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'signer',
                type: 'address',
            },
        ],
        name: 'signerReferrals',
        outputs: [
            {
                internalType: 'uint256',
                name: 'referral',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'user',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
const _bytecode = '0x6101606040523480156200001257600080fd5b5060405162004bd838038062004bd883398101604081905262000035916200031b565b604080518082018252601181527021b7b6b837b9b0b13632902937baba32b960791b6020808301918252835180850190945260018452603160f81b908401528151902060e08190527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6200011c8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c05261012052506200013f9250620001399150503390565b620001bc565b600480546001600160a01b031916600117905560405183906200016290620002f0565b6001600160a01b039091168152602001604051809103906000f0801580156200018f573d6000803e3d6000fd5b506001600160a01b031661014052620001a8826200020c565b620001b3816200027e565b50505062000365565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811662000234576040516303396d0b60e51b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fd11d57c2c7468878b1035df11c670bcd0091aa840bf8aa166365397622237bea90600090a250565b6001600160a01b038116620002a65760405163bb0bac9960e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f12e1d17016b94668449f97876f4a8d5cc2c19f314db337418894734037cc19d490600090a250565b611e9d8062002d3b83390190565b80516001600160a01b03811681146200031657600080fd5b919050565b6000806000606084860312156200033157600080fd5b6200033c84620002fe565b92506200034c60208501620002fe565b91506200035c60408501620002fe565b90509250925092565b60805160a05160c05160e05161010051610120516101405161296d620003ce6000396000818161036901528181610703015261088701526000611667015260006116b601526000611691015260006115e8015260006116130152600061163e015261296d6000f3fe608060405260043610620001db5760003560e01c80638096e1d011620000ff578063cf4e802b1162000095578063f551eb19116200006c578063f551eb191462000599578063f698da2514620005cb578063fb3551ff14620005e3578063fd66091e146200062057600080fd5b8063cf4e802b14620004ef578063ea67780f146200052f578063f2fde38b146200057457600080fd5b80639fd0506d11620000d65780639fd0506d1462000451578063a42dce801462000473578063c31215031462000498578063c415b95c14620004cd57600080fd5b80638096e1d014620004025780638456cb5914620004195780638da5cb5b146200043157600080fd5b80635c975abb1162000175578063704b0ec4116200014c578063704b0ec41462000355578063715018a6146200038b57806378add27514620003a35780637cfefb1314620003dd57600080fd5b80635c975abb14620002e557806365af1bed14620003195780636d79acf0146200033e57600080fd5b80632d88af4a11620001b65780632d88af4a14620002615780633509589514620002865780634f8632ba14620002ab57806356c01ad614620002cd57600080fd5b8063046f7da214620001e0578063092d270014620001fa5780630e316ab7146200023c575b600080fd5b348015620001ed57600080fd5b50620001f86200065a565b005b3480156200020757600080fd5b506200021f6200021936600462001a1c565b620006be565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156200024957600080fd5b50620001f86200025b36600462001a1c565b620007ce565b3480156200026e57600080fd5b50620001f86200028036600462001a1c565b6200081c565b3480156200029357600080fd5b506200021f620002a536600462001a1c565b62000834565b348015620002b857600080fd5b506004546200021f906001600160a01b031681565b348015620002da57600080fd5b506200021f62000921565b348015620002f257600080fd5b506006546200030890600160a01b900460ff1681565b604051901515815260200162000233565b3480156200032657600080fd5b50620001f86200033836600462001a3a565b62000933565b620001f86200034f36600462001aae565b620009be565b3480156200036257600080fd5b506200021f7f000000000000000000000000000000000000000000000000000000000000000081565b3480156200039857600080fd5b50620001f862000bef565b348015620003b057600080fd5b506200021f620003c236600462001b95565b6003602052600090815260409020546001600160a01b031681565b348015620003ea57600080fd5b50620001f8620003fc36600462001bc1565b62000c07565b620001f86200041336600462001bc1565b62000d13565b3480156200042657600080fd5b50620001f862000e28565b3480156200043e57600080fd5b506000546001600160a01b03166200021f565b3480156200045e57600080fd5b506006546200021f906001600160a01b031681565b3480156200048057600080fd5b50620001f86200049236600462001a1c565b62000e92565b348015620004a557600080fd5b50620004bd620004b736600462001e2f565b62000ea7565b604051620002339291906200202c565b348015620004da57600080fd5b506005546200021f906001600160a01b031681565b348015620004fc57600080fd5b50620005206200050e36600462001a1c565b60026020526000908152604090205481565b60405190815260200162000233565b3480156200053c57600080fd5b506004546001600160a01b03908116600081815260016020908152604091829020548251938452909316928201929092520162000233565b3480156200058157600080fd5b50620001f86200059336600462001a1c565b620010c5565b348015620005a657600080fd5b506004546001600160a01b03908116600090815260016020526040902054166200021f565b348015620005d857600080fd5b506200052062001141565b348015620005f057600080fd5b506200021f6200060236600462001a1c565b6001600160a01b039081166000908152600160205260409020541690565b3480156200062d57600080fd5b506200021f6200063f36600462001a1c565b6001602052600090815260409020546001600160a01b031681565b6006546001600160a01b03163314620006865760405163c726084360e01b815260040160405180910390fd5b6006805460ff60a01b191690556040517f62451d457bc659158be6e6247f56ec1df424a5c7597f71c20c2bc44e0965c8f990600090a1565b60008060ff60f81b308460601b6bffffffffffffffffffffffff191660405180602001620006ec90620019f6565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660208301520160408051601f19818403018152908290526200075192916020016200215c565b60405160208183030381529060405280519060200120604051602001620007af94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209392505050565b620007d86200114d565b6001600160a01b038116600081815260026020526040808220829055517f3525e22824a8a7df2c9a6029941c824cf95b6447f1e13d5128fd3826d35afe8b9190a250565b620008266200114d565b6200083181620011a9565b50565b6001600160a01b03818116600090815260016020526040812054909116156200087057604051633b2543a360e01b815260040160405180910390fd5b60008260601b6bffffffffffffffffffffffff19167f0000000000000000000000000000000000000000000000000000000000000000604051620008b490620019f6565b6001600160a01b0390911681526020018190604051809103906000f5905080158015620008e5573d6000803e3d6000fd5b506001600160a01b03938416600090815260016020526040902080546001600160a01b031916948216949094179093555090919050565b919050565b60006200092e3362000834565b905090565b6200093d6200114d565b806200096457604051631468f1c160e01b8152600481018290526024015b60405180910390fd5b6001600160a01b03821660008181526002602052604090819020839055517f50999ebf9b59bf3157a58816611976f2d723378ad51457d7b0413209e0cdee5990620009b29084815260200190565b60405180910390a25050565b600654600160a01b900460ff1615620009ea5760405163d0694bc760e01b815260040160405180910390fd5b6004546001600160a01b03166000190162000a1757600480546001600160a01b0319163317905562000a30565b60405163558a1e0360e11b815260040160405180910390fd5b60208601354281101562000a5b5760405163cd21db4f60e01b8152600481018290526024016200095b565b6001600160a01b03861660009081526002602052604090205462000a9e5760405163bf18af4360e01b81526001600160a01b03871660048201526024016200095b565b62000b0062000ab762000ab1896200121b565b6200136c565b86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250506001600160a01b038b169392915050620013c3565b62000b1e57604051638baa579f60e01b815260040160405180910390fd5b6004546001600160a01b03908116600090815260016020526040902054168062000b5c5760045462000b59906001600160a01b031662000834565b90505b6001600160a01b03811663267c67e33462000b788b806200218f565b888860006040518763ffffffff1660e01b815260040162000b9e95949392919062002307565b6000604051808303818588803b15801562000bb857600080fd5b505af115801562000bcd573d6000803e3d6000fd5b5050600480546001600160a01b03191660011790555050505050505050505050565b62000bf96200114d565b62000c05600062001519565b565b62000c116200114d565b8281811462000c36576040516001621398b960e31b0319815260040160405180910390fd5b60005b8181101562000d0b57600086868381811062000c595762000c596200248c565b905060200201602081019062000c70919062001b95565b9050600085858481811062000c895762000c896200248c565b905060200201602081019062000ca0919062001a1c565b6001600160e01b0319831660008181526003602052604080822080546001600160a01b0319166001600160a01b0386169081179091559051939450927f074bd9752a4bab776669a7b0184a1225ccbd83ec4f204bbdff552015be4d92eb9190a3505060010162000c39565b505050505050565b600654600160a01b900460ff161562000d3f5760405163d0694bc760e01b815260040160405180910390fd5b6004546001600160a01b03166000190162000a1757600480546001600160a01b031916339081179091556000908152600160205260409020546001600160a01b03168062000da15760045462000d9e906001600160a01b031662000834565b90505b60405163267c67e360e01b81526001600160a01b0382169063267c67e390349062000dda90899089908990899060019060040162002307565b6000604051808303818588803b15801562000df457600080fd5b505af115801562000e09573d6000803e3d6000fd5b5050600480546001600160a01b03191660011790555050505050505050565b6006546001600160a01b0316331462000e545760405163c726084360e01b815260040160405180910390fd5b6006805460ff60a01b1916600160a01b1790556040517f9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e75290600090a1565b62000e9c6200114d565b620008318162001569565b8151606090600090815b8181101562000fc457600086828151811062000ed15762000ed16200248c565b602002602001015160200151905060008162000eed90620024a2565b6001600160e01b031981166000908152600360205260409020549091506001600160a01b0316801562000fb557604051635049774360e01b81526001600160a01b0382169063504977439062000f48908690600401620024da565b600060405180830381865afa15801562000f66573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f909190810190620024ef565b89858151811062000fa55762000fa56200248c565b6020026020010151602001819052505b83600101935050505062000eb1565b508315620010b657637777777760e11b60005260036020527fd7f3c26497eb216d57b257ddd0339cfe5df80f13302588f6428fbf1152d031f1546001600160a01b03168015620010b457806001600160a01b03166350497743866040516020016200103191815260200190565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016200105e9190620024da565b600060405180830381865afa1580156200107c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010a69190810190620024ef565b620010b1906200256e565b94505b505b848492509250505b9250929050565b620010cf6200114d565b6001600160a01b038116620011365760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200095b565b620008318162001519565b60006200092e620015db565b6000546001600160a01b0316331462000c055760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200095b565b6001600160a01b038116620011d1576040516303396d0b60e51b815260040160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517fd11d57c2c7468878b1035df11c670bcd0091aa840bf8aa166365397622237bea90600090a250565b600036816200122b84806200218f565b9092509050806000816001600160401b038111156200124e576200124e62001c33565b60405190808252806020026020018201604052801562001278578160200160208202803683370190505b50905060005b82811015620012e357620012ba858583818110620012a057620012a06200248c565b9050602002810190620012b4919062002596565b62001704565b828281518110620012cf57620012cf6200248c565b60209081029190910101526001016200127e565b507fda32e33ed69b4bc9d128d706925205d2b3f5fddd34490f309742191e20820c1881604051602001620013189190620025b7565b60408051601f19818403018152828252805160209182012083820194909452908201929092529087013560608201526080015b60405160208183030381529060405280519060200120945050505050919050565b6000620013bd6200137c620015db565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000620013d4858562001892565b90925090506000816004811115620013f057620013f062001ff3565b1480156200140f5750856001600160a01b0316826001600160a01b0316145b15620014215760019250505062001512565b600080876001600160a01b0316631626ba7e60e01b88886040516024016200144b929190620025ef565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516200148b919062002612565b600060405180830381855afa9150503d8060008114620014c8576040519150601f19603f3d011682016040523d82523d6000602084013e620014cd565b606091505b5091509150818015620014e1575080516020145b80156200150b57508051630b135d3f60e11b9062001509908301602090810190840162002626565b145b9450505050505b9392505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116620015915760405163bb0bac9960e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040517f12e1d17016b94668449f97876f4a8d5cc2c19f314db337418894734037cc19d490600090a250565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156200163557507f000000000000000000000000000000000000000000000000000000000000000046145b156200166057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000368162001717604085018562002640565b9092509050806000816001600160401b038111156200173a576200173a62001c33565b60405190808252806020026020018201604052801562001764578160200160208202803683370190505b50905060005b82811015620017c157620017988585838181106200178c576200178c6200248c565b905060600201620018d9565b828281518110620017ad57620017ad6200248c565b60209081029190910101526001016200176a565b507ff827e7574ebfb75ebe1a0f5a045eb0b5d11dedf1d2a14fad521d3df8dbf656b2620017f2602088018862001a1c565b6200180160208901896200268b565b60405162001811929190620026d4565b6040518091039020836040516020016200182c9190620025b7565b60408051601f1981840301815291905280516020909101206200185660808b0160608c01620026e4565b6200186860a08c0160808d0162001a1c565b6200187a60c08d0160a08e0162001a1c565b6040516020016200134b979695949392919062002702565b6000808251604103620018cc5760208301516040840151606085015160001a620018bf878285856200192d565b94509450505050620010be565b50600090506002620010be565b60007f8b0a23c429f5160201962ac142d03b7f9f39ec0fed743ec9ea04ad8ec7699b1c826040516020016200191092919062002754565b604051602081830303815290604052805190602001209050919050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115620019665750600090506003620019ed565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015620019bb573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116620019e657600060019250925050620019ed565b9150600090505b94509492505050565b6101cd806200276b83390190565b80356001600160a01b03811681146200091c57600080fd5b60006020828403121562001a2f57600080fd5b620015128262001a04565b6000806040838503121562001a4e57600080fd5b62001a598362001a04565b946020939093013593505050565b60008083601f84011262001a7a57600080fd5b5081356001600160401b0381111562001a9257600080fd5b6020830191508360208260051b8501011115620010be57600080fd5b6000806000806000806080878903121562001ac857600080fd5b86356001600160401b038082111562001ae057600080fd5b908801906040828b03121562001af557600080fd5b81975062001b0660208a0162001a04565b9650604089013591508082111562001b1d57600080fd5b818901915089601f83011262001b3257600080fd5b81358181111562001b4257600080fd5b8a602082850101111562001b5557600080fd5b60208301965080955050606089013591508082111562001b7457600080fd5b5062001b8389828a0162001a67565b979a9699509497509295939492505050565b60006020828403121562001ba857600080fd5b81356001600160e01b0319811681146200151257600080fd5b6000806000806040858703121562001bd857600080fd5b84356001600160401b038082111562001bf057600080fd5b62001bfe8883890162001a67565b9096509450602087013591508082111562001c1857600080fd5b5062001c278782880162001a67565b95989497509550505050565b634e487b7160e01b600052604160045260246000fd5b604051606081016001600160401b038111828210171562001c6e5762001c6e62001c33565b60405290565b60405160c081016001600160401b038111828210171562001c6e5762001c6e62001c33565b604051601f8201601f191681016001600160401b038111828210171562001cc45762001cc462001c33565b604052919050565b60006001600160401b0382111562001ce85762001ce862001c33565b5060051b60200190565b60006001600160401b0382111562001d0e5762001d0e62001c33565b50601f01601f191660200190565b600082601f83011262001d2e57600080fd5b813562001d4562001d3f8262001cf2565b62001c99565b81815284602083860101111562001d5b57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011262001d8a57600080fd5b8135602062001d9d62001d3f8362001ccc565b8281526060928302850182019282820191908785111562001dbd57600080fd5b8387015b8581101562001e125781818a03121562001ddb5760008081fd5b62001de562001c49565b62001df08262001a04565b8152818601358682015260408083013590820152845292840192810162001dc1565b5090979650505050505050565b8035600381106200091c57600080fd5b6000806040838503121562001e4357600080fd5b82356001600160401b038082111562001e5b57600080fd5b818501915085601f83011262001e7057600080fd5b8135602062001e8362001d3f8362001ccc565b82815260059290921b8401810191818101908984111562001ea357600080fd5b8286015b8481101562001f8e5780358681111562001ec057600080fd5b870160c0818d03601f1901121562001ed85760008081fd5b62001ee262001c74565b62001eef86830162001a04565b815260408201358881111562001f055760008081fd5b62001f158e888386010162001d1c565b87830152506060808301358981111562001f2f5760008081fd5b62001f3f8f898387010162001d78565b604084015250608062001f5481850162001e1f565b8284015260a0915062001f6982850162001a04565b9083015262001f7b60c0840162001a04565b9082015284525091830191830162001ea7565b509997909101359750505050505050565b60005b8381101562001fbc57818101518382015260200162001fa2565b50506000910152565b6000815180845262001fdf81602086016020860162001f9f565b601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b600381106200202857634e487b7160e01b600052602160045260246000fd5b9052565b60006040808301818452808651808352606092508286019150828160051b8701016020808a0160005b848110156200214757898403605f19018652815180516001600160a01b0390811686528482015160c08688018190529190620020948389018262001fc5565b848d01518982038a8f01528051808352908901945060009250908801905b80831015620020e7578451805185168352898101518a8401528e01518e8301529388019360019290920191908c0190620020b2565b508b8501519350620020fc8c8a018562002009565b608093508385015192506200211b848a01846001600160a01b03169052565b60a0948501516001600160a01b0316989094019790975250509583019593509082019060010162002055565b50509690960196909652509295945050505050565b600083516200217081846020880162001f9f565b8351908301906200218681836020880162001f9f565b01949350505050565b6000808335601e19843603018112620021a757600080fd5b8301803591506001600160401b03821115620021c257600080fd5b6020019150600581901b3603821315620010be57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e198436030181126200221c57600080fd5b83016020810192503590506001600160401b038111156200223c57600080fd5b606081023603821315620010be57600080fd5b6001600160a01b03620022628262001a04565b16825260208181013590830152604090810135910152565b81835260208301925060008160005b84811015620022b2576200229e86836200224f565b606095860195919091019060010162002289565b5093949350505050565b8183526000602080850194508260005b85811015620022fc576001600160a01b03620022e88362001a04565b1687529582019590820190600101620022cc565b509495945050505050565b60608082528181018690526000906080808401600589901b850182018a855b8b8110156200245657878303607f190184528135368e900360be190181126200234e57600080fd5b8d0160c06001600160a01b03620023658362001a04565b168552602080830135601e198436030181126200238157600080fd5b830181810190356001600160401b038111156200239d57600080fd5b803603821315620023ad57600080fd5b8383890152620023c18489018284620021db565b935050506040620023d58185018562002204565b888503838a0152620023e98582846200227a565b9450505050620023fb89840162001e1f565b620024098a88018262002009565b506200241788840162001a04565b6001600160a01b03168887015260a06200243384820162001a04565b6001600160a01b0316960195909552948401949392909201915060010162002326565b505085810360208701526200246d81898b620022bc565b94505050505062002482604083018415159052565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b805160208201516001600160e01b03198082169291906004831015620024d25780818460040360031b1b83161693505b505050919050565b60208152600062001512602083018462001fc5565b6000602082840312156200250257600080fd5b81516001600160401b038111156200251957600080fd5b8201601f810184136200252b57600080fd5b80516200253c62001d3f8262001cf2565b8181528560208385010111156200255257600080fd5b6200256582602083016020860162001f9f565b95945050505050565b8051602080830151919081101562002590576000198160200360031b1b821691505b50919050565b6000823560be19833603018112620025ad57600080fd5b9190910192915050565b815160009082906020808601845b83811015620025e357815185529382019390820190600101620025c5565b50929695505050505050565b8281526040602082015260006200260a604083018462001fc5565b949350505050565b60008251620025ad81846020870162001f9f565b6000602082840312156200263957600080fd5b5051919050565b6000808335601e198436030181126200265857600080fd5b8301803591506001600160401b038211156200267357600080fd5b6020019150606081023603821315620010be57600080fd5b6000808335601e19843603018112620026a357600080fd5b8301803591506001600160401b03821115620026be57600080fd5b602001915036819003821315620010be57600080fd5b8183823760009101908152919050565b600060208284031215620026f757600080fd5b620015128262001e1f565b8781526001600160a01b038781166020830152604082018790526060820186905260e082019062002737608084018762002009565b80851660a084015280841660c08401525098975050505050505050565b828152608081016200151260208301846200224f56fe60a060405234801561001057600080fd5b506040516101cd3803806101cd83398101604081905261002f916100ca565b6001600160a01b038116608081905260408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009291610075916100fa565b600060405180830381855af49150503d80600081146100b0576040519150601f19603f3d011682016040523d82523d6000602084013e6100b5565b606091505b50509050806100c357600080fd5b5050610129565b6000602082840312156100dc57600080fd5b81516001600160a01b03811681146100f357600080fd5b9392505050565b6000825160005b8181101561011b5760208186018101518583015201610101565b506000920191825250919050565b608051608c6101416000396000600e0152608c6000f3fe608060405236600a57005b60317f00000000000000000000000000000000000000000000000000000000000000006033565b005b3660008037600080366000845af43d6000803e8080156051573d6000f35b3d6000fdfea2646970667358221220b300c53f0f27d6f69f51d146989995d24959784971fa921fe8c895508f88465464736f6c63430008120033a2646970667358221220e8a1c49a084800196d2fafd3408f708ad53d1723649c3c6fed4da308b88f448b64736f6c6343000812003360c060405234801561001057600080fd5b50604051611e9d380380611e9d83398101604081905261002f91610044565b336080526001600160a01b031660a052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160a051611da96100f460003960008181610156015281816105c001528181610754015281816107e90152818161090b015261093e0152600081816101ce01528181610266015281816102ad015281816102e3015281816108a601528181610a0a01528181610bd30152818161106b01526112580152611da96000f3fe60806040526004361061007b5760003560e01c8063bc197c811161004e578063bc197c8114610118578063eb6d3a1114610144578063f23a6e6114610190578063f887ea40146101bc57600080fd5b806301ffc9a714610080578063150b7a02146100b5578063267c67e3146100ee5780638129fc1c14610103575b600080fd5b34801561008c57600080fd5b506100a061009b3660046115d5565b6101f0565b60405190151581526020015b60405180910390f35b3480156100c157600080fd5b506100d56100d03660046116d5565b610227565b6040516001600160e01b031990911681526020016100ac565b6101016100fc36600461179b565b610238565b005b34801561010f57600080fd5b50610101610b99565b34801561012457600080fd5b506100d56101333660046118ae565b63bc197c8160e01b95945050505050565b34801561015057600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ac565b34801561019c57600080fd5b506100d56101ab36600461195c565b63f23a6e6160e01b95945050505050565b3480156101c857600080fd5b506101787f000000000000000000000000000000000000000000000000000000000000000081565b60006001600160e01b03198216630271189760e51b148061022157506301ffc9a760e01b6001600160e01b03198316145b92915050565b630a85bd0160e11b5b949350505050565b6000546001600160a01b0316338114610264576040516348f5c3ed60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316146102d957600080546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161790555b60008215610366577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663c415b95c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561033f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036391906119c5565b90505b8560005b818110156109e3576000898983818110610386576103866119e2565b905060200281019061039891906119f8565b6103a6906020810190611a18565b905060008a8a848181106103bc576103bc6119e2565b90506020028101906103ce91906119f8565b6103dc906020810190611a35565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939450369392508e91508d905086818110610429576104296119e2565b905060200281019061043b91906119f8565b610449906040810190611a7c565b9150915060008d8d87818110610461576104616119e2565b905060200281019061047391906119f8565b610484906080810190606001611ac5565b905060008e8e8881811061049a5761049a6119e2565b90506020028101906104ac91906119f8565b6104bd9060a0810190608001611a18565b905060008f8f898181106104d3576104d36119e2565b90506020028101906104e591906119f8565b6104f69060c081019060a001611a18565b90506001600160a01b03821661050a578691505b60008085815b8181101561073857600089898381811061052c5761052c6119e2565b6105429260206060909202019081019150611a18565b905060008a8a84818110610558576105586119e2565b90506060020160200135905060006000198203610592578b8b85818110610581576105816119e2565b9050606002016040013590506106aa565b8115806105a0575061271082115b156105be5760405163c6cc5d7f60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b0316148015610610575060018a600281111561060e5761060e611ae6565b145b15610651576127108261063673eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee610c00565b6106409190611b12565b61064a9190611b29565b9050610675565b6127108261065e85610c00565b6106689190611b12565b6106729190611b29565b90505b60008c8c86818110610689576106896119e2565b90506060020160400135905060001981146106a8578d81016024018290525b505b60018a60028111156106be576106be611ae6565b036106d0576106cd8187611b4b565b95505b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03841601610706576106ff8188611b4b565b965061072a565b886001600160a01b0316836001600160a01b03161461072a5761072a838a83610c96565b836001019350505050610510565b50600186600281111561074d5761074d611ae6565b036107cb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0836040518263ffffffff1660e01b81526004016000604051808303818588803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b5050505050610810565b60028660028111156107df576107df611ae6565b036108105761080d7f0000000000000000000000000000000000000000000000000000000000000000610c00565b91505b6001600160a01b0384161561083b57600080546001600160a01b0319166001600160a01b0386161790555b885160000361085c576108576001600160a01b038b1684610e3a565b6108a1565b6040805180820190915260148152734552524f525f524f555445525f4558454355544560601b602082015261089f906001600160a01b038c16908b908690610f58565b505b6000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b039081169116146108f057604051634875ede560e11b815260040160405180910390fd5b600286600281111561090457610904611ae6565b036109bd577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632e1a7d4d836109627f0000000000000000000000000000000000000000000000000000000000000000610c00565b61096c9190611b5e565b6040518263ffffffff1660e01b815260040161098a91815260200190565b600060405180830381600087803b1580156109a457600080fd5b505af11580156109b8573d6000803e3d6000fd5b505050505b8e156109ce576109ce8a8a8f611033565b8a6001019a505050505050505050505061036a565b508380156109f15750600034115b156109ff576109ff82611239565b848015610b8e5760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906119c5565b905060005b82811015610b8b576000898983818110610aab57610aab6119e2565b9050602002016020810190610ac09190611a18565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03821601610aff57610afa6001600160a01b03841647610e3a565b610b82565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610b46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6a9190611b71565b9050610b806001600160a01b03831685836113ff565b505b50600101610a8f565b50505b505050505050505050565b6000546001600160a01b031615610bc3576040516302ed543d60e51b815260040160405180910390fd5b600080546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316179055565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03831601610c2e575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610c72573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102219190611b71565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610ce5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d099190611b71565b1015610e355760405163095ea7b360e01b81526001600160a01b038381166004830152600019602483015284169063095ea7b390604401600060405180830381600087803b158015610d5a57600080fd5b505af1925050508015610d6b575060015b610e355760405163095ea7b360e01b81526001600160a01b0383811660048301526000602483015284169063095ea7b390604401600060405180830381600087803b158015610db957600080fd5b505af1158015610dcd573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301528616925063095ea7b39150604401600060405180830381600087803b158015610e1c57600080fd5b505af1158015610e30573d6000803e3d6000fd5b505050505b505050565b80471015610e8f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610edc576040519150601f19603f3d011682016040523d82523d6000602084013e610ee1565b606091505b5050905080610e355760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610e86565b606082471015610fb95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610e86565b600080866001600160a01b03168587604051610fd59190611bae565b60006040518083038185875af1925050503d8060008114611012576040519150601f19603f3d011682016040523d82523d6000602084013e611017565b606091505b509150915061102887838387611451565b979650505050505050565b600061103e83611bc0565b6040516378add27560e01b81526001600160e01b0319821660048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906378add27590602401602060405180830381865afa1580156110b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d691906119c5565b90506001600160a01b0381161561123257600080826001600160a01b0316632ba88be9876040518263ffffffff1660e01b81526004016111169190611c23565b600060405180830381865afa158015611133573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261115b9190810190611c91565b8151919350915060005b81811015610b8e576000838281518110611181576111816119e2565b6020026020010151905060008111156112295760008583815181106111a8576111a86119e2565b60200260200101519050610e206001600160a01b0316816001600160a01b0316036111d05750895b6111e46001600160a01b0382168a846113ff565b806001600160a01b03167f55bb3cade9d43b798a4fe5ffdd05024b2d7870df53920673bfc7e68047cd0ab18360405161121f91815260200190565b60405180910390a2505b50600101611165565b5050505050565b6040516378add27560e01b8152637777777760e11b60048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906378add27590602401602060405180830381865afa1580156112a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112cb91906119c5565b90506001600160a01b038116156113fb576000816001600160a01b0316632ba88be93460405160200161130091815260200190565b6040516020818303038152906040526040518263ffffffff1660e01b815260040161132b9190611c23565b600060405180830381865afa158015611348573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113709190810190611c91565b915050600081600081518110611388576113886119e2565b6020026020010151905060008111156113f8576113ae6001600160a01b03851682610e3a565b60405181815273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee907f55bb3cade9d43b798a4fe5ffdd05024b2d7870df53920673bfc7e68047cd0ab19060200160405180910390a25b50505b5050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e359084906114ca565b606083156114c05782516000036114b9576001600160a01b0385163b6114b95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610e86565b5081610230565b610230838361159c565b600061151f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115c69092919063ffffffff16565b805190915015610e35578080602001905181019061153d9190611d56565b610e355760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610e86565b8151156115ac5781518083602001fd5b8060405162461bcd60e51b8152600401610e869190611c23565b60606102308484600085610f58565b6000602082840312156115e757600080fd5b81356001600160e01b0319811681146115ff57600080fd5b9392505050565b6001600160a01b038116811461161b57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561165d5761165d61161e565b604052919050565b600082601f83011261167657600080fd5b813567ffffffffffffffff8111156116905761169061161e565b6116a3601f8201601f1916602001611634565b8181528460208386010111156116b857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156116eb57600080fd5b84356116f681611606565b9350602085013561170681611606565b925060408501359150606085013567ffffffffffffffff81111561172957600080fd5b61173587828801611665565b91505092959194509250565b60008083601f84011261175357600080fd5b50813567ffffffffffffffff81111561176b57600080fd5b6020830191508360208260051b850101111561178657600080fd5b9250929050565b801515811461161b57600080fd5b6000806000806000606086880312156117b357600080fd5b853567ffffffffffffffff808211156117cb57600080fd5b6117d789838a01611741565b909750955060208801359150808211156117f057600080fd5b506117fd88828901611741565b90945092505060408601356118118161178d565b809150509295509295909350565b600067ffffffffffffffff8211156118395761183961161e565b5060051b60200190565b600082601f83011261185457600080fd5b813560206118696118648361181f565b611634565b82815260059290921b8401810191818101908684111561188857600080fd5b8286015b848110156118a3578035835291830191830161188c565b509695505050505050565b600080600080600060a086880312156118c657600080fd5b85356118d181611606565b945060208601356118e181611606565b9350604086013567ffffffffffffffff808211156118fe57600080fd5b61190a89838a01611843565b9450606088013591508082111561192057600080fd5b61192c89838a01611843565b9350608088013591508082111561194257600080fd5b5061194f88828901611665565b9150509295509295909350565b600080600080600060a0868803121561197457600080fd5b853561197f81611606565b9450602086013561198f81611606565b93506040860135925060608601359150608086013567ffffffffffffffff8111156119b957600080fd5b61194f88828901611665565b6000602082840312156119d757600080fd5b81516115ff81611606565b634e487b7160e01b600052603260045260246000fd5b6000823560be19833603018112611a0e57600080fd5b9190910192915050565b600060208284031215611a2a57600080fd5b81356115ff81611606565b6000808335601e19843603018112611a4c57600080fd5b83018035915067ffffffffffffffff821115611a6757600080fd5b60200191503681900382131561178657600080fd5b6000808335601e19843603018112611a9357600080fd5b83018035915067ffffffffffffffff821115611aae57600080fd5b602001915060608102360382131561178657600080fd5b600060208284031215611ad757600080fd5b8135600381106115ff57600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761022157610221611afc565b600082611b4657634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561022157610221611afc565b8181038181111561022157610221611afc565b600060208284031215611b8357600080fd5b5051919050565b60005b83811015611ba5578181015183820152602001611b8d565b50506000910152565b60008251611a0e818460208701611b8a565b805160208201516001600160e01b03198082169291906004831015611bef5780818460040360031b1b83161693505b505050919050565b60008151808452611c0f816020860160208601611b8a565b601f01601f19169290920160200192915050565b6020815260006115ff6020830184611bf7565b600082601f830112611c4757600080fd5b81516020611c576118648361181f565b82815260059290921b84018101918181019086841115611c7657600080fd5b8286015b848110156118a35780518352918301918301611c7a565b60008060408385031215611ca457600080fd5b825167ffffffffffffffff80821115611cbc57600080fd5b818501915085601f830112611cd057600080fd5b81516020611ce06118648361181f565b82815260059290921b84018101918181019089841115611cff57600080fd5b948201945b83861015611d26578551611d1781611606565b82529482019490820190611d04565b91880151919650909350505080821115611d3f57600080fd5b50611d4c85828601611c36565b9150509250929050565b600060208284031215611d6857600080fd5b81516115ff8161178d56fea2646970667358221220ebee39352a5372df9192560cfb491a207648bd916d215032b85bd42bcd292c7964736f6c63430008120033';
const isSuperArgs = (xs) => xs.length > 1;
class Router__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(wrappedNative, pauser_, feeCollector_, overrides) {
        return super.deploy(wrappedNative, pauser_, feeCollector_, overrides || {});
    }
    getDeployTransaction(wrappedNative, pauser_, feeCollector_, overrides) {
        return super.getDeployTransaction(wrappedNative, pauser_, feeCollector_, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Router__factory = Router__factory;
Router__factory.bytecode = _bytecode;
Router__factory.abi = _abi;
//# sourceMappingURL=Router__factory.js.map